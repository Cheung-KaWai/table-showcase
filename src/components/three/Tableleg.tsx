/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 -t -T leg.glb 
Files: leg.glb [2.9KB] > /Users/kawai/Desktop/table-showcase/public/leg-transformed.glb [1.97KB] (32%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { TablelegMaterial } from "./TablelegMaterial";
import { useTableStore } from "../../store/Tablestore";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh;
  };
};

export function Tableleg(props: JSX.IntrinsicElements["group"]) {
  const { nodes } = useGLTF("/leg-transformed.glb") as unknown as GLTFResult;
  const length = useTableStore((state) => state.tableLength);
  const offset = 0.3;
  return (
    <>
      <group {...props} dispose={null} position={[length / 2 - offset, 0, 0]}>
        <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material}>
          <TablelegMaterial />
        </mesh>
      </group>
      <group {...props} dispose={null} position={[-length / 2 + offset, 0, 0]}>
        <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material}>
          <TablelegMaterial />
        </mesh>
      </group>
    </>
  );
}

useGLTF.preload("/leg-transformed.glb");
